# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Maze
scopeName: source.maze
fileTypes: [mz]
uuid: 178833ea-fbf9-43f8-a9f9-cda1daae8be6

patterns:
- comment: Wall
  name: keyword.control
  match: '##|``'

- comment: Path
  name: entity.name.tag
  match: '\.\.'

- comment: Splitter
  name: keyword.control
  match: '<>'

- comment: Signal
  name: entity.name.tag
  match: '\*[\*A-Za-z0-9]'

- comment: Pause
  name: constant.numeric
  match: '[0-9]{2}'

- comment: Start
  name: keyword.control
  match: '\^\^'

- comment: Hole
  name: keyword.control
  match: '\(\)'

- comment: Out
  name: support.function
  match: '>>'

- comment: In
  name: support.function
  match: '<<'

- comment: One use
  name: keyword.control
  match: '--'

- comment: Direction
  name: constant.language
  match: '%[LRUDNlrudn]'

- comment: Assignment function
  name: keyword.other
  match: "([A-Za-z][A-Za-z0-9]) *-> *(([-+*/]=) *([0-9]+)|(=) *(([0-9]+)|(\"[^\"]*\")|('[^']*')))"
  captures:
    '1': {name: entity.name.function}
    '3': {name: keyword.operator}
    '5': {name: keyword.operator}
    '4': {name: constant.numeric}
    '7': {name: constant.numeric}
    '8': {name: string.quoted.double}
    '9': {name: string.quoted.single}

- comment: Equality Function
  name: keyword.other
  match: '([A-Za-z][A-Za-z0-9]) *-> *(?:IF|if) *([<>]=?|==|\*[\*A-Za-z0-9]) *(?:THEN|then) *(%[LRUDNlrudn]) *(?:ELSE|else) *(%[LRUDNlrudn])'
  captures:
    '1': {name: entity.name.function}
    '2': {name: keyword.operator}
    '3': {name: constant.language}
    '4': {name: constant.language}

- comment: Function cell
  name: entity.name.function
  match: '[A-Za-z][A-Za-z0-9]'

- comment: Comment
  name: comment.line.double-slash
  match: ' *//.*'
...